{"version":3,"sources":["Reduser/reducer.js","Store/store.js","Action/actions.js","Todo/TodoList.js","Todo/AddTodo.js","Todo/TodoFooter.js","Todo/TodoApp.js","index.js"],"names":["initialState","id","Math","random","text","isCompleted","store","createStore","state","action","type","payload","map","item","filter","addTodo","toggleTodo","removeTodo","removeCompleted","TodoList","todoList","getState","className","todo","onClick","dispatch","AddTodo","useState","addValue","setAddValue","addTodoItem","length","onSubmit","e","preventDefault","placeholder","onChange","target","value","TodoFooter","size","TodoApp","render","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"mOACMA,EAAe,CAChB,CACGC,GAAIC,KAAKC,SACTC,KAAM,WACNC,aAAa,GAGf,CACEJ,GAAIC,KAAKC,SACTC,KAAM,cACNC,aAAa,GAGf,CACEJ,GAAIC,KAAKC,SACTC,KAAM,YACNC,aAAa,ICZrB,IACeC,EADDC,aDiBC,WAAiD,IAA/BC,EAA8B,uDAAtBR,EAAcS,EAAQ,uCAC3D,OAAQA,EAAOC,MACX,IAAK,WACD,MAAM,CACD,CACGN,KAAMK,EAAOE,QACbV,GAAGC,KAAKC,SACRE,aAAY,IAJpB,mBAMOG,IAGX,IAAK,cACD,OAAOA,EAAMI,KAAI,SAAAC,GAAI,OAAIA,EAAKZ,KAAOQ,EAAOE,QAAnB,2BACLE,GADK,IACCR,aAAcQ,EAAKR,cAAcQ,KAC/D,IAAK,cACD,OAAOL,EAAMM,QAAO,SAAAD,GAAI,OAAIA,EAAKZ,KAAOQ,EAAOE,WAEnD,IAAK,mBACD,OAAOH,EAAMM,QAAO,SAAAD,GAAI,OAAKA,EAAKR,eAEtC,QACI,OAAOG,ME5CbO,EAAU,CAAEL,KAAM,YAClBM,EAAa,CAAEN,KAAM,eACrBO,EAAa,CAAEP,KAAM,eACrBQ,EAAkB,CAAER,KAAM,oB,OC8BjBS,EA9BE,WACb,IAAMC,EAAWd,EAAMe,WAEvB,OACI,qBAAKC,UAAY,mBAAjB,SACKF,EAASR,KAAI,SAAAW,GAAI,OACd,sBACID,UAAU,eADd,UAGI,qBACIA,UAAS,4BAAuBC,EAAKlB,YAAc,UAAY,IAC/DmB,QAAY,kBAAMlB,EAAMmB,SAAN,2BAAmBT,GAAnB,IAA+BL,QAASY,EAAKtB,SAEnE,qBACIqB,UAAS,oBAAeC,EAAKlB,YAAc,oBAAsB,IADrE,SAGKkB,EAAKnB,OAEV,qBACIkB,UAAY,aACZE,QAAY,kBAAMlB,EAAMmB,SAAN,2BAAmBR,GAAnB,IAA+BN,QAASY,EAAKtB,OAFnE,iBAZMsB,EAAKtB,U,eCehByB,EApBC,WACZ,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAc,WACZF,EAASG,SACbzB,EAAMmB,SAAN,2BAAmBV,GAAnB,IAA4BJ,QAASiB,KACrCC,EAAY,MAMhB,OACI,uBAAMP,UAAY,mBAClBU,SANiB,SAACC,GAClBA,EAAEC,iBACFJ,KAGA,UAEI,uBAAOK,YAAY,yBAAyBC,SAAY,SAACH,GAAD,OAAOJ,EAAYI,EAAEI,OAAOC,QAAQA,MAASV,IACrG,wBAAQJ,QAAWM,EAAnB,qBCHGS,MAZf,WACI,IAAMnB,EAAWd,EAAMe,WACjBmB,EAAOpB,EAASN,QAAO,SAACS,GAAD,OAAQA,EAAKlB,eAAa0B,OAEvD,OACI,sBAAKT,UAAY,mBAAjB,UACQ,iCAAOkB,EAAP,IAAcpB,EAASW,OAAvB,gBACA,wBAAQP,QAAW,kBAAMlB,EAAMmB,SAAN,eAAmBP,KAA5C,iCCODuB,EAVC,WACZ,OACI,sBAAKnB,UAAY,YAAjB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCNNoB,EAAS,WACbC,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,UAI5BJ,IACApC,EAAMyC,UAAUL,K","file":"static/js/main.b47d13a6.chunk.js","sourcesContent":["\r\nconst initialState = [\r\n     {\r\n        id: Math.random(),\r\n        text: 'learn js',\r\n        isCompleted: false\r\n  \r\n      },\r\n      {\r\n        id: Math.random(),\r\n        text: 'learn React',\r\n        isCompleted: false\r\n  \r\n      },\r\n      {\r\n        id: Math.random(),\r\n        text: 'learn Css',\r\n        isCompleted: false\r\n  \r\n      },\r\n]\r\n\r\nexport default function reducer (state = initialState, action) {\r\n    switch( action.type ){\r\n        case \"ADD_TODO\":\r\n            return [\r\n                 {\r\n                    text: action.payload,\r\n                    id:Math.random(),\r\n                    isCompleted:false,\r\n                  } ,\r\n                ...state,\r\n                              \r\n            ];\r\n        case \"TOGGLE_TODO\":\r\n            return state.map(item => item.id === action.payload? \r\n                            {...item, isCompleted: !item.isCompleted}: item );\r\n        case \"REMOVE_TODO\":\r\n            return state.filter(item => item.id !== action.payload );\r\n            \r\n        case \"REMOVE_COMPLETED\":\r\n            return state.filter(item => !item.isCompleted );\r\n         \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore } from 'redux';\r\nimport reducer from '../Reduser/reducer';\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","const addTodo = { type: \"ADD_TODO\" };\r\nconst toggleTodo = { type: \"TOGGLE_TODO\" };\r\nconst removeTodo = { type: \"REMOVE_TODO\" };\r\nconst removeCompleted = { type: \"REMOVE_COMPLETED\" };\r\n\r\nexport {\r\n    addTodo,\r\n    toggleTodo,\r\n    removeTodo,\r\n    removeCompleted,\r\n}","import store from '../Store/store';\r\nimport { toggleTodo, removeTodo } from '../Action/actions'\r\n\r\nconst TodoList = () => {\r\n    const todoList = store.getState();\r\n\r\n    return (\r\n        <div className = \"todoList-wrapper\">\r\n            {todoList.map(todo =>\r\n                <div key={todo.id}\r\n                    className=\"todo-wrapper\"\r\n                >\r\n                    <div\r\n                        className={`checkmark-wrapper ${todo.isCompleted ? \"checked\" : \"\"}`}\r\n                        onClick = { () => store.dispatch({...toggleTodo, payload: todo.id})}\r\n                        ></div>\r\n                    <div \r\n                        className={`todo-text ${todo.isCompleted ? \"todo-text-checked\" : \"\"}`}\r\n                    >\r\n                        {todo.text}\r\n                    </div>\r\n                    <div \r\n                        className = \"remove-btn\"\r\n                        onClick = { () => store.dispatch({...removeTodo, payload: todo.id})}\r\n                    >\r\n                       x\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import {addTodo} from '../Action/actions';\r\nimport store from '../Store/store';\r\nimport { useState } from 'react';\r\n\r\nconst AddTodo = () => {\r\n    const [addValue, setAddValue] = useState(\"\");\r\n    const addTodoItem = () => {\r\n        if(!addValue.length) return;\r\n        store.dispatch({...addTodo, payload: addValue});\r\n        setAddValue(\"\")\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTodoItem();\r\n    }\r\n    return ( \r\n        <form className = \"add-todo-wrapper\"\r\n        onSubmit = {handleSubmit}>\r\n            <input placeholder=\"What needs to be dones\" onChange = {(e) => setAddValue(e.target.value)} value = {addValue}></input>\r\n            <button onClick = {addTodoItem}>Add</button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default AddTodo;","import store from '../Store/store';\r\nimport { removeCompleted } from '../Action/actions'\r\n\r\n\r\nfunction TodoFooter(){\r\n    const todoList = store.getState();\r\n    const size = todoList.filter((todo)=>todo.isCompleted).length;\r\n        \r\n    return (\r\n        <div className = \"add-todo-wrapper\">\r\n                <span>{size}/{todoList.length} Completed</span>\r\n                <button onClick= { () => store.dispatch({...removeCompleted})}>Clear Completed</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoFooter;","import TodoList from './TodoList';\r\nimport '../Style/todoApp.css';\r\nimport AddTodo from './AddTodo';\r\nimport TodoFooter from './TodoFooter';\r\n\r\n\r\n\r\n\r\nconst TodoApp = () => {\r\n    return(\r\n        <div className = \"container\">\r\n            <AddTodo />\r\n            <TodoList />\r\n            <TodoFooter />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Style/index.css';\nimport TodoApp from './Todo/TodoApp';\n//import reportWebVitals from './reportWebVitals';\nimport store from './Store/store';\n\nconst render = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <TodoApp />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();\nstore.subscribe(render);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}